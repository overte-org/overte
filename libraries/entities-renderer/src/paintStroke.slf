<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  <$_SCRIBE_FILENAME$>
//  Generated on <$_SCRIBE_DATE$>
//
//  Created by Eric Levin on 8/10/2015
//  Copyright 2015 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@if not HIFI_USE_FORWARD@>
    <@include DeferredBufferWrite.slh@>
<@else@>
    OUTPUT(0, vec4, _fragColor0);
<@endif@>

<@include paintStroke.slh@>
<$declarePolyLineBuffers()$>

<@include CullFace.slh@>
// the albedo texture
TEXTURE(0, sampler2D, _texture);

<@if not HIFI_USE_FORWARD@>
    INPUT(0, vec3, _normalWS);
<@endif@>
INPUT(1, vec2, _texCoord);
INPUT(2, vec4, _color);
INPUT(3, float, _distanceFromCenter);

void main(void) {
    vec4 texel = texture(_texture, _texCoord);
    texel *= _color;
    texel.a *= mix(1.0, pow(1.0 - min(1.0, abs(_distanceFromCenter)), 10.0), _polylineData.faceCameraGlow.y);

<@if not HIFI_USE_FORWARD@>
    <@if HIFI_USE_TRANSLUCENT@>
        packDeferredFragmentTranslucent(evalFrontOrBackFaceNormal(_normalWS), texel.a, texel.rgb, DEFAULT_ROUGHNESS);
    <@else@>
        packDeferredFragmentUnlit(evalFrontOrBackFaceNormal(_normalWS), texel.a, texel.rgb);
    <@endif@>
<@else@>
    _fragColor0 = texel;
<@endif@>
}
