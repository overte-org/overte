<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  <$_SCRIBE_FILENAME$>
//  Generated on <$_SCRIBE_DATE$>
//
//  Created by Sam Gateau on 5/5/2015.
//  Copyright 2015 High Fidelity, Inc.
//  Copyright 2024 Overte e.V.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Transform.slh@>
<$declareStandardTransform()$>

OUTPUT(0, vec3, _normal);
<@if not HIFI_USE_FORWARD@>
    layout(location=1) out vec4 _prevPositionCS;
<@endif@>

void main(void) {
    const float depth = 0.0;
    #ifdef VULKAN
        const vec4 UNIT_QUAD[4] = vec4[4](
            vec4(-1.0, 1.0, depth, 1.0),
            vec4(1.0, 1.0, depth, 1.0),
            vec4(-1.0, -1.0, depth, 1.0),
            vec4(1.0, -1.0, depth, 1.0)
        );
    #else
        const vec4 UNIT_QUAD[4] = vec4[4](
            vec4(-1.0, -1.0, depth, 1.0),
            vec4(1.0, -1.0, depth, 1.0),
            vec4(-1.0, 1.0, depth, 1.0),
            vec4(1.0, 1.0, depth, 1.0)
        );
    #endif

    // standard transform
    TransformCamera cam = getTransformCamera();
    vec3 clipDir = UNIT_QUAD[gl_VertexID].xyz;
    vec3 eyeDir;
    <$transformClipToEyeDir(cam, clipDir, eyeDir)$>
    <$transformEyeToWorldDir(cam, eyeDir, _normal)$>

<@if not HIFI_USE_FORWARD@>
    // FIXME: this is probably wrong
    _prevPositionCS = cam._previousProjectionViewUntranslated * (cam._viewInverse * (cam._projectionInverse * vec4(clipDir, 1.0)));
<@endif@>

    // Position is supposed to come in clip space
    gl_Position = vec4(clipDir, 1.0);

    <$transformStereoClipSpace(gl_Position)$>
}
